@using SilkDesign.Models;
@model PlacementArrangement
@{
    ViewData["Title"] = "Assign Arrangment to Placement";
}

<h1>Assign Arrangment to Placement</h1>
<h2 class="alert-danger">@ViewBag.Result</h2>

@using (Html.BeginForm(FormMethod.Post))
{
    <div class="form-group">
        <label asp-for="PlacementName"></label>
        @Model.PlacementName
    </div>
    <div class="form-group">
        <label asp-for="Quantity"></label>
        @Model.Quantity
    </div>
    <div class="form-group">
        <label asp-for="SizeCode"></label>
        @Model.SizeCode
    </div>
    <div class="form-group">
        <label asp-for="ArrangementInventoryID">Arrangment</label>
    <div class="row-md-10">
        @Html.ListBoxFor(x => x.ArrangementInventoryID,Model.Arrangements )
    </div>
        
    </div>
    <div class="form-group">
        <input type="hidden" asp-for="LocationPlacementID" />
        <input type="hidden" asp-for="LocationID" />
        <input type="hidden" asp-for="Quantity" />
    </div>
    
    <div class="text-center panel-body">
        <br />
        <button type="submit" class="btn btn-sm btn-primary" onclick="return validate()">Create</button>
        <button class="btn btn-sm btn-primary" onclick="javascript:history.go(-1);return false;">Cancel</button>

    </div>
}
<script>
    function validate() {
        var qty = document.getElementById('Quantity');
        var items = document.getElementById('ArrangementInventoryID');
        var options = document.getElementById('ArrangementInventoryID').options, count = 0;

        for (var i = 0; i < options.length; i++) {
            if (options[i].selected) count++;
        }
        if (count > qty.value) {
            alert('To many selected. You must select ' + qty.value);
            return false;
        }
        if (count < qty.value){
            alert('To few selected. You must select ' + qty.value);
            return false;
        }
        return true;
    }
</script>
